*{
    margin: 0;
    padding: 0;
}

body{
    background-color: rgb(221, 221, 221);
    font-family: sans-serif;
}
.header{
height: 4em;
padding: .5em;
background-color: whitesmoke;
box-shadow: 2px 2px 2px rgb(167, 165, 165);
display: flex;
align-items: center;
justify-content: space-between;
}

form{
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 300px;
    padding: 1em;
    margin: 10% auto;
    background-color: rgb(218, 216, 216);
    border-radius: 1em;
    box-shadow: 2px 2px 2px rgb(167, 165, 165);
}

form>input{
    width: 80%;
    height: 3em;
    margin: .5em;
    border: none;
    border-radius: 5px;
}

.formHead{
    display: flex;
    width: 80%;
    align-items: center;
    justify-content: space-between;
}

#container{
    max-width: 1000px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 2em;
    padding: 2em;
    margin: auto;
}


.card{
    background: rgb(34,193,195);
    background: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%); 
    box-shadow: 0 1px 10px rgba(0, 0, 0, 0.5);
    height: 150px;
    padding: 1em;
    border-radius: 1em;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

/*New Book Modal*/
#modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  }

  #close {
    color: #aaa;
    font-size: 28px;
    font-weight: bold;
  }
  
  #close:hover,
  #close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

/*Button CSS*/
button {
    font-size: 17px;
    padding: 0.5em 2em;
    border: transparent;
    box-shadow: 2px 2px 4px rgba(0,0,0,0.4);
    background: dodgerblue;
    color: white;
    border-radius: 4px;
   }
   
   button:hover {
    background: rgb(2,0,36);
    background: linear-gradient(90deg, rgba(30,144,255,1) 0%, rgba(0,212,255,1) 100%);
   }
   
   button:active {
    transform: translate(0em, 0.2em);
   }

/*Slide Switch*/
.switch {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: .5em;
    --button-width: 3.5em;
    --button-height: 2em;
    --toggle-diameter: 1.5em;
    --button-toggle-offset: calc((var(--button-height) - var(--toggle-diameter)) / 2);
    --toggle-shadow-offset: 10px;
    --toggle-wider: 3em;
    --color-grey: #cccccc;
    --color-green: #4296f4;
   }
   
   .slider {
    display: inline-block;
    width: var(--button-width);
    height: var(--button-height);
    background-color: var(--color-grey);
    border-radius: calc(var(--button-height) / 2);
    position: relative;
    transition: 0.3s all ease-in-out;
   }
   
   .slider::after {
    content: "";
    display: inline-block;
    width: var(--toggle-diameter);
    height: var(--toggle-diameter);
    background-color: #fff;
    border-radius: calc(var(--toggle-diameter) / 2);
    position: absolute;
    top: var(--button-toggle-offset);
    transform: translateX(var(--button-toggle-offset));
    box-shadow: var(--toggle-shadow-offset) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
    transition: 0.3s all ease-in-out;
   }
   
   .switch input[type="checkbox"]:checked + .slider {
    background-color: var(--color-green);
   }
   
   .switch input[type="checkbox"]:checked + .slider::after {
    transform: translateX(calc(var(--button-width) - var(--toggle-diameter) - var(--button-toggle-offset)));
    box-shadow: calc(var(--toggle-shadow-offset) * -1) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
   }
   
   .switch input[type="checkbox"] {
    display: none;
   }
   
   .switch input[type="checkbox"]:active + .slider::after {
    width: var(--toggle-wider);
   }
   
   .switch input[type="checkbox"]:checked:active + .slider::after {
    transform: translateX(calc(var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)));
   }
   